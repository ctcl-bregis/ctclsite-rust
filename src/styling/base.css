{% for name, path in fonts %}
@font-face {
    font-family: "{{ name }}";
    src: url({{ path }}) format("truetype");
}
{% endfor %}

/* Font use definitions */

.content h1, header h1 {
    font-family: "pix12x12";
    font-size: 60px;
}

.pagebutton-title, section h2, .content h2 {
    font-family: "pix12x12";
    font-size: 40px;
}

.section p, .pagebutton-desc, .pagebutton-date, nav ul li a, footer p {
    font-family: "pix12x12";
    font-size: 20px;
}

.content p code, .section p code {
    font-family: "pix12x12-mono";
    font-size: 40px;
}

.content h3 {
    font-family: "pix10x10";
    font-size: 14px;
}

.content h4, .content h5, .content h6 {
    font-family: "pix8x8";
}

.content p strong, .content p code, .content ul li strong, .section p strong, .section p code, .content table tr th {
    font-family: "pix12x12-light";
    font-size: 20px;
    font-weight: normal;
}

.content p, figure figcaption, .content ul li, td, th {
    font-family: "pix12x12-light";
    font-size: 20px;
}

/* Base Tags */
body {
    background-color: #000000;
    color: #FFFFFF;
    margin: 0;
}

footer {
    display: flex;
    justify-content: center;
}

footer p {
    padding: 3px;
    margin-top: 8pt;
    margin-bottom: 8pt;
}

hr {
    width: 100%;
    border-left: none;
    border-right: none;
    border-bottom-style: solid;
    border-top-style: solid;
}

/* Figure images */
figure {
    margin: 8pt;
    margin-right: 75%;
    clear: left;
    padding: 4pt;
    width: 50%;
    max-width: 360pt;
    background-color: #101010;
    border-style: solid;
    border-width: 1pt;
    border-color: #999999;
    align-items: center;
}

figure img {
    width: -webkit-fill-available;
    max-width: 100%;
}

figure video {
    width: -webkit-fill-available;
    max-width: 100%;
}

/* Pixel fonts are already "bold" by nature */
h1, h2, h3, h4, h5, h6 {
    font-weight: normal;
    margin: 8px;
}

header h1 {
    display: flex;
    justify-content: center;
    text-align: center;
    margin: 6px;
}

/* Navbar */
nav ul {
    list-style-type: none;
    overflow: hidden;
    align-items: center;
    margin: 0;
    padding: 0;
    color: #000000;
}

nav ul li {
    list-style: none;
    float: left;
    text-decoration: none;
}

nav ul li a {
    border-width: {{ sectionborder }};
    border-style: solid;
    padding: 4px;
    display: block;
    text-decoration-line: none;
}

/* Content in sections and content pages */
.content {
    margin: {{ sectionmargin }};
}

.content p {
    margin: 8px;
}

.content ul {
    padding-left: 24px;
    margin: 0;
}

.content ul li {
    list-style-type: square;
    padding: 0;
}

.content ul li p {
    margin: 0;
}

.content table {
    border-style: solid;
    border-width: 1px;
    border-color: #FFFFFF;
    -webkit-border-horizontal-spacing: 0;
    -webkit-border-vertical-spacing: 0;
}

.content table tr th, .content table tr td {
    border-style: solid;
    border-width: 1px;
    border-color: #FFFFFF;
    padding: 2px;
    text-align: center;
    vertical-align: middle;
}


/* Styling common to sections */
section {
    position: relative;
    width: auto;
    overflow: hidden;
    border-width: {{ sectionborder }};
    border-style: solid;
    margin: {{ sectionmargin }};
    background: rgba(0,0,0,.6);
}

section .content {
    margin: {{ sectionmargin }};
}

section h2 {
    width: fit-content; 
    height: fit-content;
    border-right: none;
    margin: 0;
    padding: 4px;
    padding-top: 0;
    padding-bottom: 0;
}

section video {
    height: 100vh;
    left: 50%;
    overflow: hidden;
    position: absolute;
    transform: translateX(-50%);
    z-index: -1;
}

.section-fitscreen {
    min-height: 100vh;
}

/* Section classes for Projects and Blog pages */

.pagebutton {
    height: {{ linkheight }};
    max-height: {{ linkmaxheight }};
    border-style: solid;
    border-width: {{ sectionborder }};
    text-decoration: none;
    position: relative;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: min-content 1fr min-content;
    grid-template-areas:
      'title image'
      'desc  image'
      'date  image';
    overflow: hidden;
    margin: {{ sectionmargin }};
}

.pagebutton-title {
    width: fit-content; 
    height: fit-content;
    border-right: none;
    margin: 0;
    padding: 4px;
    padding-top: 0;
    padding-bottom: 0;
    color: #000000;
    grid-area: title;
    display: flex;
    flex-direction: row;
}

.pagebutton-desc {
    color: #FFFFFF;
    margin: {{ sectionmargin }};
    grid-area: desc;
    background-clip: text;
    -webkit-background-clip: text;
}

.pagebutton-img {
    height: inherit;
    width: auto;
    background-size: cover;
    background-position: right;
    grid-area: image;
    border-left-style: solid;
    border-left-width: {{ sectionborder }};
}

.pagebutton-date {
    color: #FFFFFF;
    margin: {{ sectionmargin }};
    grid-area: date;
    margin-top: auto;
}

/* Play/Pause Button */
.vidbtn-play {
    background-image: url("/static/icons/play.svg");
    background-size: contain;
    border: none;
    padding: 0;
    margin: 8px;
    margin-bottom: 4px;
    height: 36px;
    width: 36px;
}

.vidbtn-pause {
    background-image: url("/static/icons/pause.svg");
    background-size: contain;
    border: none;
    padding: 0;
    margin: 8px;
    margin-bottom: 4px;
    height: 36px;
    width: 36px;
}

/* Section Color Scheme */
/* This should be the only thing in base.scss that defines colors other than #000000 or #FFFFFF */
{% for themename, themedata in themes %}
/* The title should only be the only h2 text in a section */
.section-{{ themename }} h2 {
    color: {{ themedata.fgcolor }};
    background-color: {{ themedata.color }};
}
.pagebutton.section-{{ themename }} .pagebutton-title {
    color: {{ themedata.fgcolor }};
    background-color: {{ themedata.color }};
}
.section-{{ themename }} {
    border-color: {{ themedata.color }};
}
.pagebutton.section-{{ themename }} {
    box-shadow: {% for i in range(start = 1, end = sectionshadowcount + 1) %}
        {{ i }}px {{ i }}px rgb({{ themedata.colorrgb[0] * 0.9 | round(method="floor") }}, {{ themedata.colorrgb[1] * 0.9 | round(method="floor") }}, {{ themedata.colorrgb[2] * 0.9 | round(method="floor") }}){% if i < sectionshadowcount %},{% endif %}
    {% endfor %}
}
.pagebutton.section-{{ themename }}:hover {
    box-shadow: none;
    transform: translate({{ sectionshadowcount }}px, {{ sectionshadowcount }}px);
}
.section-{{ themename }} a {
    color: {{ themedata.color }};
}
.pagebutton.section-{{ themename }} ::selection {
    color: {{ themedata.fgcolor }};
    background-color: {{ themedata.color }};
}
.pagebutton.section-{{ themename }} ::-moz-selection {
    color: {{ themedata.fgcolor }};
    background-color: {{ themedata.color }};
}
.section-{{ themename }} ul li::marker {
    color: {{ themedata.color }};
}
.section-{{ themename }}.pagebutton img {
    border-color: {{ themedata.color }};
}
{% endfor %}


