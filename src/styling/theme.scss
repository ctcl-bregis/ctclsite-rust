@use "sass:color";
@use "sass:map";
@use "sass:string";

/* This is the quick hack; this value is to be replaced by build.rs */
$$thememap$$

hr {
    border-top: 2pt solid $theme;
}

.navbar {
    background-color: $theme;
}

.menu li a {
    $btn-height: 16pt;

    text-decoration: none;
    color: $fgcolor;
    background-color: $theme;

    &:hover {
        transition: 0.1s linear;
        background-color: $fgcolor;
        color: $theme;
    }
}

a {
    color: $theme;
}

li::marker {
    color: $theme;
}

.banner {
    border-color: $theme;
}

.servicebanner {
    border-color: $theme;
}

.sectionheader {
    background-color: $theme;
}

.sectionitem {
    border-color: $theme;
}

.sectiontitle {
    background-color: $theme;
}

$selectiontypes: "::selection", "::-moz-selection", "::-o-selection", "::-ms-selection", "::-webkit-selection";

@each $selectiontype in $selectiontypes {
    /* Default selection colors */
    #{$selectiontype} {
        color: $fgcolor;
        background-color: $theme;
    }
    .sectiontitle#{$selectiontype} {
        color: $theme;
        background-color: $fgcolor;
    }
}

@each $themename, $colors in $themes {
    $boxfgcolor: map-get($colors, "fgcolor");
    $boxbgcolor: map-get($colors, "color");

    .theme-#{$themename} {
        border-color: $boxbgcolor;

        @each $selectiontype in $selectiontypes {
            #{$selectiontype} {
                color: $boxfgcolor;
                background-color: $boxbgcolor;
            }
        }
    }

    .theme-#{$themename} img {
        border-color: $boxbgcolor;
    }

    .theme-#{$themename} a button {
        color: $boxfgcolor;
        background-color: $boxbgcolor;
        border-color: $boxbgcolor;

        @each $selectiontype in $selectiontypes {
            #{$selectiontype} {
                color: $boxbgcolor;
                background-color: $boxfgcolor;
            }
        }

        &:hover {
            transition: 0.1s linear;
            background-color: $boxfgcolor;
            color: $boxbgcolor;
        }
    }

    .linkitem-theme-#{$themename} {
        border-color: $boxbgcolor;

        @each $selectiontype in $selectiontypes {
            #{$selectiontype} {
                color: $boxbgcolor;
                background-color: $boxfgcolor;
            }
        }
    }

    .linkitem-theme-#{$themename} a button {
        color: $boxfgcolor;
        background-color: rgba(0, 0, 0, 0);
        border-color: $boxbgcolor;

        &:hover {
            transition: 0.1s linear;
            background-color: $boxbgcolor;
            color: $boxfgcolor;
        }
    }
}

.backbutton {
    height: 32pt;
    width: 64pt;
    font-family: "pix5x5";

    border-width: 2pt;
    border-color: $theme;
    border-style: solid;
    border-bottom-style: none;
    cursor: pointer;
    font-size: 12pt;

    background-color: $theme;
    color: $fgcolor;

    &:hover {
        transition: 0.1s linear;
        background-color: $fgcolor;
        color: $theme;
    }
}

@supports selector(::-webkit-scrollbar) {
    ::-webkit-scrollbar {
        width: 16px;
        height: 16px;
    }
    
    ::-webkit-scrollbar-corner,
    ::-webkit-scrollbar-track {
        background-color: scale-color($theme, $lightness: -80%);
    }
    
    ::-webkit-scrollbar-thumb {
        background-color: $theme;
        background-clip: padding-box;
        border: 2px solid transparent;
    }
    
    ::-webkit-scrollbar-thumb:hover {
        background-color: $theme;
    }
    
    ::-webkit-scrollbar-thumb:active {
        background-color: $theme;
    }
    
    ::-webkit-scrollbar-button:single-button {
        background-color: scale-color($theme, $lightness: -80%);

        display: block;
        background-size: 10px;
        background-repeat: no-repeat;
    }
    
    ::-webkit-scrollbar-button:single-button:vertical:decrement {
        height: 12px;
        width: 16px;
        background-position: center 4px;
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='" + $themergb + "'><polygon points='50,00 0,50 100,50'/></svg>");
    }
    
    ::-webkit-scrollbar-button:single-button:vertical:decrement:hover {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='" + $themergb + "'><polygon points='50,00 0,50 100,50'/></svg>");
    }
    
    ::-webkit-scrollbar-button:single-button:vertical:decrement:active {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='" + $themergb + "'><polygon points='50,00 0,50 100,50'/></svg>");
    }
    
    ::-webkit-scrollbar-button:single-button:vertical:increment {
        height: 12px;
        width: 16px;
        background-position: center 2px;
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='" + $themergb + "'><polygon points='0,0 100,0 50,50'/></svg>");
    }
    
    ::-webkit-scrollbar-button:single-button:vertical:increment:hover {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='" + $themergb + "'><polygon points='0,0 100,0 50,50'/></svg>");
    }
    
    ::-webkit-scrollbar-button:single-button:vertical:increment:active {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='" + $themergb + "'><polygon points='0,0 100,0 50,50'/></svg>");
    }
    
    ::-webkit-scrollbar-button:single-button:horizontal:decrement {
        height: 12px;
        width: 12px;
        background-position: 3px 3px;
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100'><polygon points='0,50 50,100 50,0'/></svg>");
        background-color: scale-color($theme, $lightness: -80%);
    }
    
    ::-webkit-scrollbar-button:single-button:horizontal:decrement:hover {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100'><polygon points='0,50 50,100 50,0'/></svg>");
        background-color: scale-color($theme, $lightness: -80%);
    }
    
    ::-webkit-scrollbar-button:single-button:horizontal:decrement:active {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100'><polygon points='0,50 50,100 50,0'/></svg>");
        background-color: scale-color($theme, $lightness: -80%);
    }
    
    ::-webkit-scrollbar-button:single-button:horizontal:increment {
        height: 12px;
        width: 12px;
        background-position: 3px 3px;
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100'><polygon points='0,0 0,100 50,50'/></svg>");
        background-color: scale-color($theme, $lightness: -80%);
    }
    
    ::-webkit-scrollbar-button:single-button:horizontal:increment:hover {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100'><polygon points='0,0 0,100 50,50'/></svg>");
        background-color: scale-color($theme, $lightness: -80%);
    }
    
    ::-webkit-scrollbar-button:single-button:horizontal:increment:active {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100'><polygon points='0,0 0,100 50,50'/></svg>");
        background-color: scale-color($theme, $lightness: -80%);
    }
}

/* scrollbar-color included in case the webkit method above is not supported */
@supports (scrollbar-color: auto) {
    html {
      scrollbar-color: $theme scale-color($theme, $lightness: -80%);
    }
}

